#PBS -l nodes=1:ppn=20,pmem=2000mb,walltime=04:00:00
#PBS -V
#PBS -k oe
#PBS -j oe
#PBS -N ${NAME}

name=${NAME}
oldFileName=${ORIGNAME}
code=${CODE}
time="NOTAVAILABLE"
pyName=${PYNAME}
pyTrue="0"
res=${RES}
waters=${WATERS}
combi=${COMBI}
multiple=${MULTIPLE}
threed=${THREED}
fileKeep=${FILEKEEP}
isUnix=1
confs=${CONFS}
freq=${FREQ}
step=${STEP}
dstep=${DSTEP}
email=${EMAIL}
molList=${MOLLIST}
modList=${MODLIST}
cutList=${CUTLIST}
PWD=${LOC}
REMOTESCRIPT=${RETDIR}
CODE=${CODE}
TMP="$PWD/pdb_tmp"
DEST="$PWD/pdb_des"
EXECSRC="$PWD/pdb2movie"
purename=$(sed 's/.\{4\}$//' <<< "$name")
webServerUser=pdb2movie
webServerLoc=${LOCALHOST}

#if values are empty or false booleans, do not include in command line
if [ $waters -eq 1 ] ; then
	sWaters="--waters "
fi
if [ $combi -eq 1 ] ; then
	sCombi="--combi "
fi
if [ $multiple -eq 1 ] ; then
	sMulti="--multiple "
fi
if [ $threed -eq 1 ] ; then
	sThreed="--threed "
fi
if [ -n "$confs" ]; then
	sConfs="--confs $confs "
fi
if [ -n "$freq" ]; then
	sFreq="--freq $freq "
fi
if [ -n "$step" ]; then
	sStep="--step $step "
fi
if [ -n "$dstep" ]; then
	sDStep="--dstep $dstep "
fi
if [ "$molList" != "NULL" ]; then
	sMolList="--keep $molList"
fi
if [ "$modList" != "NULL" ]; then
        sModList="--modes $modList "
fi
if [ "$cutList" != "NULL" ]; then
	sCutList="--ecuts $cutList "
fi
if [ -n "$pyName" ]; then
	sPyName="--video $TMP/$pyName "
fi

com='python3 '$EXECSRC'/pdb2movie.py '$TMP'/'$name' --res '$res' '$sWaters' '$sCombi' '$sMulti' '$sConfs' '$sThreed' '$sCombi' '$sFreq' '$sStep' '$sDStep' '$sModList' '$sMolList' '$sCutList' '$sPyName
args=''$oldFileName' '$pyTrue' '$res' '$combi' '$multiple' '$threed' '$confs' '$freq' '$step' '$dstep' '$molList' '$modList' '$cutList' '$time' '$code''

echo "NAME="$name
echo "RES="$res
echo "WATERS="$waters
echo "COMBI"$combi
echo "MULTIPLE="$multiple
echo "THREED="$threed
echo "FILEKEEP="$fileKeep
echo "CONFS="$confs
echo "FREQ="$freq
echo "STEP="$step
echo "DSTEP="$dstep
echo "EMAIL="$email
echo "MOLLIST="$molList
echo "MODLIST="$modList
echo "CUTLIST="$cutList
echo "PWD="$PWD
echo "REMOTESCRIPT="$REMOTESCRIPT
echo "TMP="$TMP
echo "DEST="$DEST
echo "EXC="$EXECSRC
echo "PURENAME="$purename
echo "COM="$com
echo "PYNAME="$pyName
echo "ARGS="$args

ssh $webServerUser@$webServerLoc "cd $REMOTESCRIPT; $REMOTESCRIPT/mailer.sh $email 'pdb2movie: Your Request' processing.txt NULL $args"
eval $com

cd $TMP/$purename;
if [ $isUnix = 1 ]; then

	tar -cvf $purename.tar Run-*
	if [ $fileKeep -eq 1 ]; then
		tar -rf $purename.tar Runs/ Modes/
	fi
	gzip $purename.tar
	mv $purename.tar.gz $DEST/ ;
	SUFFIX='.tar.gz'

else

	if [ $fileKeep -eq 1 ]; then
		find . | egrep Run\|Modes | zip -9 -y -r -q -@ $purename.zip
	else
		find . | egrep Run- | zip -9 -y -r -q -@ $purename.zip
	fi
	SUFFIX='.zip'

fi
cd -;
rm -r $TMP/$purename

if [ $? -eq 0 ]; then

	scp -v $DEST/$purename$SUFFIX $webServerUser@$webServerLoc:/var/www/html/download/
	if [ $? -eq 1 ]; then rm $DEST/$purename$SUFFIX; fi
	ssh $webServerUser@$webServerLoc "cd $REMOTESCRIPT; ./mailer.sh $email 'pdb2movie: Your Request' complete.txt $webServLoc/download/$purename$SUFFIX $args; $REMOTESCRIPT/removeFinishedTask.sh $purename"

else

	ssh $webServerUser@$webServerLoc "cd $REMOTESCRIPT; ./mailer.sh $email 'pdb2movie: Your Request' error.txt  $args"

fi
